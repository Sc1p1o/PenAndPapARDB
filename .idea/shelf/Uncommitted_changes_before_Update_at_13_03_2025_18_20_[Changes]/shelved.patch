Index: PenAndPapARDB/TestJsons/CompleteCharacterPut.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"stats\": [\r\n    {\r\n      \"character_id\": \"#0002\",\r\n      \"character_is_inspired\": false,\r\n      \"character_name\": null,\r\n      \"character_class\": null,\r\n      \"character_race\": null,\r\n      \"character_background\": null,\r\n      \"character_subclass\": null,\r\n      \"character_level\": 1,\r\n      \"character_alignment\": null,\r\n      \"character_conditions\": null,\r\n      \"character_update_link\": null\r\n    }\r\n  ],\r\n  \"attributes\": [\r\n    {\r\n      \"id\": 13,\r\n      \"attribute_name\": \"strength\",\r\n      \"attribute_value\": 10,\r\n      \"attribute_adjustment\": 0,\r\n      \"attribute_character\": \"#0002\"\r\n    },\r\n    {\r\n      \"id\": 14,\r\n      \"attribute_name\": \"dexterity\",\r\n      \"attribute_value\": 10,\r\n      \"attribute_adjustment\": 0,\r\n      \"attribute_character\": \"#0002\"\r\n    },\r\n    {\r\n      \"id\": 15,\r\n      \"attribute_name\": \"constitution\",\r\n      \"attribute_value\": 10,\r\n      \"attribute_adjustment\": 0,\r\n      \"attribute_character\": \"#0002\"\r\n    },\r\n    {\r\n      \"id\": 16,\r\n      \"attribute_name\": \"intelligence\",\r\n      \"attribute_value\": 10,\r\n      \"attribute_adjustment\": 0,\r\n      \"attribute_character\": \"#0002\"\r\n    },\r\n    {\r\n      \"id\": 17,\r\n      \"attribute_name\": \"wisdom\",\r\n      \"attribute_value\": 10,\r\n      \"attribute_adjustment\": 0,\r\n      \"attribute_character\": \"#0002\"\r\n    },\r\n    {\r\n      \"id\": 18,\r\n      \"attribute_name\": \"charisma\",\r\n      \"attribute_value\": 10,\r\n      \"attribute_adjustment\": 0,\r\n      \"attribute_character\": \"#0002\"\r\n    }\r\n  ],\r\n  \"ac\": [\r\n    {\r\n      \"id\": 3,\r\n      \"ac_base\": \"10\",\r\n      \"ac_modified\": 0,\r\n      \"ac_character\": \"#0002\"\r\n    }\r\n  ],\r\n  \"saving_throw_proficiencies\": [\r\n    {\r\n      \"id\": 13,\r\n      \"saving_throw_name\": \"strength\",\r\n      \"saving_throw_adjustment\": 0,\r\n      \"saving_throw_is_proficient\": false,\r\n      \"saving_throw_proficiency_character\": \"#0002\"\r\n    },\r\n    {\r\n      \"id\": 14,\r\n      \"saving_throw_name\": \"dexterity\",\r\n      \"saving_throw_adjustment\": 0,\r\n      \"saving_throw_is_proficient\": false,\r\n      \"saving_throw_proficiency_character\": \"#0002\"\r\n    },\r\n    {\r\n      \"id\": 15,\r\n      \"saving_throw_name\": \"constitution\",\r\n      \"saving_throw_adjustment\": 0,\r\n      \"saving_throw_is_proficient\": false,\r\n      \"saving_throw_proficiency_character\": \"#0002\"\r\n    },\r\n    {\r\n      \"id\": 16,\r\n      \"saving_throw_name\": \"intelligence\",\r\n      \"saving_throw_adjustment\": 0,\r\n      \"saving_throw_is_proficient\": false,\r\n      \"saving_throw_proficiency_character\": \"#0002\"\r\n    },\r\n    {\r\n      \"id\": 17,\r\n      \"saving_throw_name\": \"wisdom\",\r\n      \"saving_throw_adjustment\": 0,\r\n      \"saving_throw_is_proficient\": false,\r\n      \"saving_throw_proficiency_character\": \"#0002\"\r\n    },\r\n    {\r\n      \"id\": 18,\r\n      \"saving_throw_name\": \"charisma\",\r\n      \"saving_throw_adjustment\": 0,\r\n      \"saving_throw_is_proficient\": false,\r\n      \"saving_throw_proficiency_character\": \"#0002\"\r\n    }\r\n  ],\r\n  \"skills\": [\r\n    {\r\n      \"id\": 37,\r\n      \"skill_name\": \"athletics\",\r\n      \"skill_adjustment\": 0,\r\n      \"skill_is_proficient\": false,\r\n      \"skill_is_expertise\": false,\r\n      \"skill_character\": \"#0002\"\r\n    },\r\n    {\r\n      \"id\": 38,\r\n      \"skill_name\": \"acrobatics\",\r\n      \"skill_adjustment\": 0,\r\n      \"skill_is_proficient\": false,\r\n      \"skill_is_expertise\": false,\r\n      \"skill_character\": \"#0002\"\r\n    },\r\n    {\r\n      \"id\": 39,\r\n      \"skill_name\": \"animal_handling\",\r\n      \"skill_adjustment\": 0,\r\n      \"skill_is_proficient\": false,\r\n      \"skill_is_expertise\": false,\r\n      \"skill_character\": \"#0002\"\r\n    },\r\n    {\r\n      \"id\": 40,\r\n      \"skill_name\": \"arcana\",\r\n      \"skill_adjustment\": 0,\r\n      \"skill_is_proficient\": false,\r\n      \"skill_is_expertise\": false,\r\n      \"skill_character\": \"#0002\"\r\n    },\r\n    {\r\n      \"id\": 41,\r\n      \"skill_name\": \"deception\",\r\n      \"skill_adjustment\": 0,\r\n      \"skill_is_proficient\": false,\r\n      \"skill_is_expertise\": false,\r\n      \"skill_character\": \"#0002\"\r\n    },\r\n    {\r\n      \"id\": 42,\r\n      \"skill_name\": \"history\",\r\n      \"skill_adjustment\": 0,\r\n      \"skill_is_proficient\": false,\r\n      \"skill_is_expertise\": false,\r\n      \"skill_character\": \"#0002\"\r\n    },\r\n    {\r\n      \"id\": 43,\r\n      \"skill_name\": \"insight\",\r\n      \"skill_adjustment\": 0,\r\n      \"skill_is_proficient\": false,\r\n      \"skill_is_expertise\": false,\r\n      \"skill_character\": \"#0002\"\r\n    },\r\n    {\r\n      \"id\": 44,\r\n      \"skill_name\": \"intimidation\",\r\n      \"skill_adjustment\": 0,\r\n      \"skill_is_proficient\": false,\r\n      \"skill_is_expertise\": false,\r\n      \"skill_character\": \"#0002\"\r\n    },\r\n    {\r\n      \"id\": 45,\r\n      \"skill_name\": \"investigation\",\r\n      \"skill_adjustment\": 0,\r\n      \"skill_is_proficient\": false,\r\n      \"skill_is_expertise\": false,\r\n      \"skill_character\": \"#0002\"\r\n    },\r\n    {\r\n      \"id\": 46,\r\n      \"skill_name\": \"medicine\",\r\n      \"skill_adjustment\": 0,\r\n      \"skill_is_proficient\": false,\r\n      \"skill_is_expertise\": false,\r\n      \"skill_character\": \"#0002\"\r\n    },\r\n    {\r\n      \"id\": 47,\r\n      \"skill_name\": \"nature\",\r\n      \"skill_adjustment\": 0,\r\n      \"skill_is_proficient\": false,\r\n      \"skill_is_expertise\": false,\r\n      \"skill_character\": \"#0002\"\r\n    },\r\n    {\r\n      \"id\": 48,\r\n      \"skill_name\": \"perception\",\r\n      \"skill_adjustment\": 0,\r\n      \"skill_is_proficient\": false,\r\n      \"skill_is_expertise\": false,\r\n      \"skill_character\": \"#0002\"\r\n    },\r\n    {\r\n      \"id\": 49,\r\n      \"skill_name\": \"performance\",\r\n      \"skill_adjustment\": 0,\r\n      \"skill_is_proficient\": false,\r\n      \"skill_is_expertise\": false,\r\n      \"skill_character\": \"#0002\"\r\n    },\r\n    {\r\n      \"id\": 50,\r\n      \"skill_name\": \"persuasion\",\r\n      \"skill_adjustment\": 0,\r\n      \"skill_is_proficient\": false,\r\n      \"skill_is_expertise\": false,\r\n      \"skill_character\": \"#0002\"\r\n    },\r\n    {\r\n      \"id\": 51,\r\n      \"skill_name\": \"religion\",\r\n      \"skill_adjustment\": 0,\r\n      \"skill_is_proficient\": false,\r\n      \"skill_is_expertise\": false,\r\n      \"skill_character\": \"#0002\"\r\n    },\r\n    {\r\n      \"id\": 52,\r\n      \"skill_name\": \"sleight_of_hand\",\r\n      \"skill_adjustment\": 0,\r\n      \"skill_is_proficient\": false,\r\n      \"skill_is_expertise\": false,\r\n      \"skill_character\": \"#0002\"\r\n    },\r\n    {\r\n      \"id\": 53,\r\n      \"skill_name\": \"stealth\",\r\n      \"skill_adjustment\": 0,\r\n      \"skill_is_proficient\": false,\r\n      \"skill_is_expertise\": false,\r\n      \"skill_character\": \"#0002\"\r\n    },\r\n    {\r\n      \"id\": 54,\r\n      \"skill_name\": \"survival\",\r\n      \"skill_adjustment\": 0,\r\n      \"skill_is_proficient\": false,\r\n      \"skill_is_expertise\": false,\r\n      \"skill_character\": \"#0002\"\r\n    }\r\n  ],\r\n  \"hit_points\": [\r\n    {\r\n      \"id\": 3,\r\n      \"hit_points_current\": 40,\r\n      \"hit_points_max\": 30,\r\n      \"hit_points_temp\": 0,\r\n      \"non_lethal_damage\": 0,\r\n      \"hit_points_character\": \"#0002\"\r\n    }\r\n  ]\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/PenAndPapARDB/TestJsons/CompleteCharacterPut.json b/PenAndPapARDB/TestJsons/CompleteCharacterPut.json
--- a/PenAndPapARDB/TestJsons/CompleteCharacterPut.json	(revision df52cb18cb6cf5451b986573c1a7f96eaddf61b0)
+++ b/PenAndPapARDB/TestJsons/CompleteCharacterPut.json	(date 1741833152728)
@@ -1,269 +1,213 @@
 {
   "stats": [
     {
-      "character_id": "#0002",
+      "character_id": "#0000",
       "character_is_inspired": false,
-      "character_name": null,
-      "character_class": null,
-      "character_race": null,
-      "character_background": null,
-      "character_subclass": null,
-      "character_level": 1,
-      "character_alignment": null,
-      "character_conditions": null,
-      "character_update_link": null
+      "character_name": "Faelyndiira",
+      "character_class": "Sorcerer",
+      "character_race": "Drow",
+      "character_background": "Acolythe",
+      "character_subclass": "Draconic",
+      "character_level": 9,
+      "character_alignment": "Neutral",
+      "character_conditions": "Frightened",
+      "character_update_link": "",
+      "character_proficiency_bonus": 4,
+      "character_speed": 30,
+      "character_gender": "Female",
+      "character_death_save_success": 0,
+      "character_death_save_failure": 0,
+      "character_exhaustion": 0,
+      "character_initiative_adjustment": 0,
+      "character_proficiency_bonus_adjustment": 0
     }
   ],
   "attributes": [
     {
-      "id": 13,
       "attribute_name": "strength",
-      "attribute_value": 10,
-      "attribute_adjustment": 0,
-      "attribute_character": "#0002"
+      "attribute_value": 8,
+      "attribute_adjustment": 0
     },
     {
-      "id": 14,
       "attribute_name": "dexterity",
-      "attribute_value": 10,
-      "attribute_adjustment": 0,
-      "attribute_character": "#0002"
+      "attribute_value": 15,
+      "attribute_adjustment": 0
     },
     {
-      "id": 15,
       "attribute_name": "constitution",
-      "attribute_value": 10,
-      "attribute_adjustment": 0,
-      "attribute_character": "#0002"
+      "attribute_value": 16,
+      "attribute_adjustment": 0
     },
     {
-      "id": 16,
       "attribute_name": "intelligence",
-      "attribute_value": 10,
-      "attribute_adjustment": 0,
-      "attribute_character": "#0002"
+      "attribute_value": 13,
+      "attribute_adjustment": 0
     },
     {
-      "id": 17,
       "attribute_name": "wisdom",
-      "attribute_value": 10,
-      "attribute_adjustment": 0,
-      "attribute_character": "#0002"
+      "attribute_value": 18,
+      "attribute_adjustment": 0
     },
     {
-      "id": 18,
       "attribute_name": "charisma",
-      "attribute_value": 10,
-      "attribute_adjustment": 0,
-      "attribute_character": "#0002"
+      "attribute_value": 19,
+      "attribute_adjustment": 0
     }
   ],
   "ac": [
     {
-      "id": 3,
-      "ac_base": "10",
-      "ac_modified": 0,
-      "ac_character": "#0002"
+      "ac_base": 10,
+      "ac_modified": 0
     }
   ],
   "saving_throw_proficiencies": [
     {
-      "id": 13,
       "saving_throw_name": "strength",
       "saving_throw_adjustment": 0,
-      "saving_throw_is_proficient": false,
-      "saving_throw_proficiency_character": "#0002"
+      "saving_throw_is_proficient": false
     },
     {
-      "id": 14,
       "saving_throw_name": "dexterity",
       "saving_throw_adjustment": 0,
-      "saving_throw_is_proficient": false,
-      "saving_throw_proficiency_character": "#0002"
+      "saving_throw_is_proficient": true
     },
     {
-      "id": 15,
       "saving_throw_name": "constitution",
       "saving_throw_adjustment": 0,
-      "saving_throw_is_proficient": false,
-      "saving_throw_proficiency_character": "#0002"
+      "saving_throw_is_proficient": false
     },
     {
-      "id": 16,
       "saving_throw_name": "intelligence",
       "saving_throw_adjustment": 0,
-      "saving_throw_is_proficient": false,
-      "saving_throw_proficiency_character": "#0002"
+      "saving_throw_is_proficient": false
     },
     {
-      "id": 17,
       "saving_throw_name": "wisdom",
       "saving_throw_adjustment": 0,
-      "saving_throw_is_proficient": false,
-      "saving_throw_proficiency_character": "#0002"
+      "saving_throw_is_proficient": false
     },
     {
-      "id": 18,
       "saving_throw_name": "charisma",
       "saving_throw_adjustment": 0,
-      "saving_throw_is_proficient": false,
-      "saving_throw_proficiency_character": "#0002"
+      "saving_throw_is_proficient": true
     }
   ],
   "skills": [
     {
-      "id": 37,
       "skill_name": "athletics",
       "skill_adjustment": 0,
       "skill_is_proficient": false,
-      "skill_is_expertise": false,
-      "skill_character": "#0002"
+      "skill_is_expertise": false
     },
     {
-      "id": 38,
       "skill_name": "acrobatics",
       "skill_adjustment": 0,
       "skill_is_proficient": false,
-      "skill_is_expertise": false,
-      "skill_character": "#0002"
+      "skill_is_expertise": false
     },
     {
-      "id": 39,
       "skill_name": "animal_handling",
       "skill_adjustment": 0,
-      "skill_is_proficient": false,
-      "skill_is_expertise": false,
-      "skill_character": "#0002"
+      "skill_is_proficient": true,
+      "skill_is_expertise": false
     },
     {
-      "id": 40,
       "skill_name": "arcana",
       "skill_adjustment": 0,
-      "skill_is_proficient": false,
-      "skill_is_expertise": false,
-      "skill_character": "#0002"
+      "skill_is_proficient": true,
+      "skill_is_expertise": false
     },
     {
-      "id": 41,
       "skill_name": "deception",
       "skill_adjustment": 0,
-      "skill_is_proficient": false,
-      "skill_is_expertise": false,
-      "skill_character": "#0002"
+      "skill_is_proficient": true,
+      "skill_is_expertise": false
     },
     {
-      "id": 42,
       "skill_name": "history",
       "skill_adjustment": 0,
       "skill_is_proficient": false,
-      "skill_is_expertise": false,
-      "skill_character": "#0002"
+      "skill_is_expertise": false
     },
     {
-      "id": 43,
       "skill_name": "insight",
       "skill_adjustment": 0,
       "skill_is_proficient": false,
-      "skill_is_expertise": false,
-      "skill_character": "#0002"
+      "skill_is_expertise": false
     },
     {
-      "id": 44,
       "skill_name": "intimidation",
       "skill_adjustment": 0,
-      "skill_is_proficient": false,
-      "skill_is_expertise": false,
-      "skill_character": "#0002"
+      "skill_is_proficient": true,
+      "skill_is_expertise": false
     },
     {
-      "id": 45,
       "skill_name": "investigation",
       "skill_adjustment": 0,
       "skill_is_proficient": false,
-      "skill_is_expertise": false,
-      "skill_character": "#0002"
+      "skill_is_expertise": false
     },
     {
-      "id": 46,
       "skill_name": "medicine",
       "skill_adjustment": 0,
-      "skill_is_proficient": false,
-      "skill_is_expertise": false,
-      "skill_character": "#0002"
+      "skill_is_proficient": true,
+      "skill_is_expertise": false
     },
     {
-      "id": 47,
       "skill_name": "nature",
       "skill_adjustment": 0,
-      "skill_is_proficient": false,
-      "skill_is_expertise": false,
-      "skill_character": "#0002"
+      "skill_is_proficient": true,
+      "skill_is_expertise": false
     },
     {
-      "id": 48,
       "skill_name": "perception",
       "skill_adjustment": 0,
       "skill_is_proficient": false,
-      "skill_is_expertise": false,
-      "skill_character": "#0002"
+      "skill_is_expertise": false
     },
     {
-      "id": 49,
       "skill_name": "performance",
       "skill_adjustment": 0,
       "skill_is_proficient": false,
-      "skill_is_expertise": false,
-      "skill_character": "#0002"
+      "skill_is_expertise": false
     },
     {
-      "id": 50,
       "skill_name": "persuasion",
       "skill_adjustment": 0,
       "skill_is_proficient": false,
-      "skill_is_expertise": false,
-      "skill_character": "#0002"
+      "skill_is_expertise": false
     },
     {
-      "id": 51,
       "skill_name": "religion",
       "skill_adjustment": 0,
-      "skill_is_proficient": false,
-      "skill_is_expertise": false,
-      "skill_character": "#0002"
+      "skill_is_proficient": true,
+      "skill_is_expertise": false
     },
     {
-      "id": 52,
       "skill_name": "sleight_of_hand",
       "skill_adjustment": 0,
       "skill_is_proficient": false,
-      "skill_is_expertise": false,
-      "skill_character": "#0002"
+      "skill_is_expertise": false
     },
     {
-      "id": 53,
       "skill_name": "stealth",
       "skill_adjustment": 0,
       "skill_is_proficient": false,
-      "skill_is_expertise": false,
-      "skill_character": "#0002"
+      "skill_is_expertise": false
     },
     {
-      "id": 54,
       "skill_name": "survival",
       "skill_adjustment": 0,
       "skill_is_proficient": false,
-      "skill_is_expertise": false,
-      "skill_character": "#0002"
+      "skill_is_expertise": false
     }
   ],
   "hit_points": [
     {
-      "id": 3,
-      "hit_points_current": 40,
-      "hit_points_max": 30,
-      "hit_points_temp": 0,
-      "non_lethal_damage": 0,
-      "hit_points_character": "#0002"
+      "hit_points_current": 30,
+      "hit_points_max": 40,
+      "hit_points_temp": 5,
+      "non_lethal_damage": 0
     }
   ]
 }
\ No newline at end of file
Index: PenAndPapARDB/TestJsons/EmptyCharacterCompletePost.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"stats\": [\r\n    {\r\n      \"character_is_inspired\": false,\r\n      \"character_name\": null,\r\n      \"character_class\": null,\r\n      \"character_race\": null,\r\n      \"character_background\": null,\r\n      \"character_subclass\": null,\r\n      \"character_level\": 1,\r\n      \"character_alignment\": null,\r\n      \"character_conditions\": null,\r\n      \"character_source_link\": null\r\n    }\r\n  ],\r\n  \"attributes\": [\r\n    {\r\n      \"attribute_name\": \"strength\",\r\n      \"attribute_value\": 10,\r\n      \"attribute_adjustment\": 0\r\n    },\r\n    {\r\n      \"attribute_name\": \"dexterity\",\r\n      \"attribute_value\": 10,\r\n      \"attribute_adjustment\": 0\r\n    },\r\n    {\r\n      \"attribute_name\": \"constitution\",\r\n      \"attribute_value\": 10,\r\n      \"attribute_adjustment\": 0\r\n    },\r\n    {\r\n      \"attribute_name\": \"intelligence\",\r\n      \"attribute_value\": 10,\r\n      \"attribute_adjustment\": 0\r\n    },\r\n    {\r\n      \"attribute_name\": \"wisdom\",\r\n      \"attribute_value\": 10,\r\n      \"attribute_adjustment\": 0\r\n    },\r\n    {\r\n      \"attribute_name\": \"charisma\",\r\n      \"attribute_value\": 10,\r\n      \"attribute_adjustment\": 0\r\n    }\r\n  ],\r\n  \"ac\": [\r\n    {\r\n      \"ac_base\": 10,\r\n      \"ac_modified\": 0\r\n    }\r\n  ],\r\n  \"saving_throw_proficiencies\": [\r\n    {\r\n      \"saving_throw_name\": \"strength\",\r\n      \"saving_throw_adjustment\": 0,\r\n      \"saving_throw_is_proficient\": false\r\n    },\r\n    {\r\n      \"saving_throw_name\": \"dexterity\",\r\n      \"saving_throw_adjustment\": 0,\r\n      \"saving_throw_is_proficient\": false\r\n    },\r\n    {\r\n      \"saving_throw_name\": \"constitution\",\r\n      \"saving_throw_adjustment\": 0,\r\n      \"saving_throw_is_proficient\": false\r\n    },\r\n    {\r\n      \"saving_throw_name\": \"intelligence\",\r\n      \"saving_throw_adjustment\": 0,\r\n      \"saving_throw_is_proficient\": false\r\n    },\r\n    {\r\n      \"saving_throw_name\": \"wisdom\",\r\n      \"saving_throw_adjustment\": 0,\r\n      \"saving_throw_is_proficient\": false\r\n    },\r\n    {\r\n      \"saving_throw_name\": \"charisma\",\r\n      \"saving_throw_adjustment\": 0,\r\n      \"saving_throw_is_proficient\": false\r\n    }\r\n  ],\r\n  \"skills\": [\r\n    {\r\n      \"skill_name\": \"athletics\",\r\n      \"skill_adjustment\": 0,\r\n      \"skill_is_proficient\": false,\r\n      \"skill_is_expertise\": false\r\n    },\r\n    {\r\n      \"skill_name\": \"acrobatics\",\r\n      \"skill_adjustment\": 0,\r\n      \"skill_is_proficient\": false,\r\n      \"skill_is_expertise\": false\r\n    },\r\n    {\r\n      \"skill_name\": \"animal_handling\",\r\n      \"skill_adjustment\": 0,\r\n      \"skill_is_proficient\": false,\r\n      \"skill_is_expertise\": false\r\n    },\r\n    {\r\n      \"skill_name\": \"arcana\",\r\n      \"skill_adjustment\": 0,\r\n      \"skill_is_proficient\": false,\r\n      \"skill_is_expertise\": false\r\n    },\r\n    {\r\n      \"skill_name\": \"deception\",\r\n      \"skill_adjustment\": 0,\r\n      \"skill_is_proficient\": false,\r\n      \"skill_is_expertise\": false\r\n    },\r\n    {\r\n      \"skill_name\": \"history\",\r\n      \"skill_adjustment\": 0,\r\n      \"skill_is_proficient\": false,\r\n      \"skill_is_expertise\": false\r\n    },\r\n    {\r\n      \"skill_name\": \"insight\",\r\n      \"skill_adjustment\": 0,\r\n      \"skill_is_proficient\": false,\r\n      \"skill_is_expertise\": false\r\n    },\r\n    {\r\n      \"skill_name\": \"intimidation\",\r\n      \"skill_adjustment\": 0,\r\n      \"skill_is_proficient\": false,\r\n      \"skill_is_expertise\": false\r\n    },\r\n    {\r\n      \"skill_name\": \"investigation\",\r\n      \"skill_adjustment\": 0,\r\n      \"skill_is_proficient\": false,\r\n      \"skill_is_expertise\": false\r\n    },\r\n    {\r\n      \"skill_name\": \"medicine\",\r\n      \"skill_adjustment\": 0,\r\n      \"skill_is_proficient\": false,\r\n      \"skill_is_expertise\": false\r\n    },\r\n    {\r\n      \"skill_name\": \"nature\",\r\n      \"skill_adjustment\": 0,\r\n      \"skill_is_proficient\": false,\r\n      \"skill_is_expertise\": false\r\n    },\r\n    {\r\n      \"skill_name\": \"perception\",\r\n      \"skill_adjustment\": 0,\r\n      \"skill_is_proficient\": false,\r\n      \"skill_is_expertise\": false\r\n    },\r\n    {\r\n      \"skill_name\": \"performance\",\r\n      \"skill_adjustment\": 0,\r\n      \"skill_is_proficient\": false,\r\n      \"skill_is_expertise\": false\r\n    },\r\n    {\r\n      \"skill_name\": \"persuasion\",\r\n      \"skill_adjustment\": 0,\r\n      \"skill_is_proficient\": false,\r\n      \"skill_is_expertise\": false\r\n    },\r\n    {\r\n      \"skill_name\": \"religion\",\r\n      \"skill_adjustment\": 0,\r\n      \"skill_is_proficient\": false,\r\n      \"skill_is_expertise\": false\r\n    },\r\n    {\r\n      \"skill_name\": \"sleight_of_hand\",\r\n      \"skill_adjustment\": 0,\r\n      \"skill_is_proficient\": false,\r\n      \"skill_is_expertise\": false\r\n    },\r\n    {\r\n      \"skill_name\": \"stealth\",\r\n      \"skill_adjustment\": 0,\r\n      \"skill_is_proficient\": false,\r\n      \"skill_is_expertise\": false\r\n    },\r\n    {\r\n      \"skill_name\": \"survival\",\r\n      \"skill_adjustment\": 0,\r\n      \"skill_is_proficient\": false,\r\n      \"skill_is_expertise\": false\r\n    }\r\n  ],\r\n  \"hit_points\": [\r\n    {\r\n      \"hit_points_current\": 30,\r\n      \"hit_points_max\": 30,\r\n      \"hit_points_temp\": 0,\r\n      \"non_lethal_damage\": 0\r\n    }\r\n  ]\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/PenAndPapARDB/TestJsons/EmptyCharacterCompletePost.json b/PenAndPapARDB/TestJsons/EmptyCharacterCompletePost.json
--- a/PenAndPapARDB/TestJsons/EmptyCharacterCompletePost.json	(revision df52cb18cb6cf5451b986573c1a7f96eaddf61b0)
+++ b/PenAndPapARDB/TestJsons/EmptyCharacterCompletePost.json	(date 1741833152737)
@@ -2,15 +2,25 @@
   "stats": [
     {
       "character_is_inspired": false,
-      "character_name": null,
-      "character_class": null,
-      "character_race": null,
-      "character_background": null,
-      "character_subclass": null,
+      "character_name": "",
+      "character_class": "",
+      "character_race": "",
+      "character_background": "",
+      "character_subclass": "",
       "character_level": 1,
-      "character_alignment": null,
-      "character_conditions": null,
-      "character_source_link": null
+      "character_alignment": "",
+      "character_conditions": "",
+      "character_update_link": "",
+      "character_proficiency_bonus": 2,
+
+      "character_speed": 30,
+      "character_gender": "",
+      "character_death_save_success": 0,
+      "character_death_save_failure": 0,
+      "character_exhaustion": 0,
+      "character_initiative_adjustment": 0,
+      "character_proficiency_bonus_adjustment": 0
+
     }
   ],
   "attributes": [
Index: PenAndPapAR/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.db import models\r\n\r\nclass CharacterStats(models.Model):\r\n    character_id = models.CharField(max_length=50, primary_key=True)\r\n    character_is_inspired = models.BooleanField(default=False, null=True)\r\n    character_name = models.CharField(max_length=50, null=True)\r\n    character_class = models.CharField(max_length=50, null=True)\r\n    character_race = models.CharField(max_length=50, null=True)\r\n    character_background = models.CharField(max_length=50, null=True)\r\n    character_subclass = models.CharField(max_length=50, null=True)\r\n    character_level = models.PositiveSmallIntegerField(default=3, null=True)\r\n    character_alignment = models.CharField(max_length=50, null=True)\r\n    character_conditions = models.TextField(null=True)\r\n    character_update_link = models.URLField(null=True)\r\n    character_proficiency_bonus = models.PositiveSmallIntegerField(default=2, null=True)\r\n\r\nclass Attributes(models.Model):\r\n    attribute_name = models.CharField(max_length=20)\r\n    attribute_value = models.PositiveSmallIntegerField(default=10)\r\n    attribute_adjustment = models.PositiveSmallIntegerField(default=0)\r\n    attribute_character = models.ForeignKey(CharacterStats, on_delete=models.CASCADE)\r\n\r\n    class Meta:\r\n        unique_together = ('attribute_name', 'attribute_character')\r\n\r\n\r\nclass AC(models.Model):\r\n    ac_base = models.PositiveSmallIntegerField(max_length=20)\r\n    ac_modified = models.PositiveSmallIntegerField(default=10)\r\n    ac_character = models.OneToOneField(CharacterStats, on_delete=models.CASCADE, related_name=\"ac\")\r\n\r\n\r\nclass SavingThrowProficiencies(models.Model):\r\n    saving_throw_name = models.CharField(max_length=20)\r\n    saving_throw_adjustment = models.PositiveSmallIntegerField(default=0)\r\n    saving_throw_is_proficient = models.BooleanField(default=False)\r\n    saving_throw_proficiency_character = models.ForeignKey(CharacterStats, on_delete=models.CASCADE)\r\n\r\n    class Meta:\r\n        unique_together = ('saving_throw_name', 'saving_throw_proficiency_character')\r\n\r\nclass Skills(models.Model):\r\n    skill_name = models.CharField(max_length=20)\r\n    skill_adjustment = models.PositiveSmallIntegerField(default=0)\r\n    skill_is_proficient = models.BooleanField(default=False)\r\n    skill_is_expertise = models.BooleanField(default=False)\r\n    skill_character = models.ForeignKey(CharacterStats, on_delete=models.CASCADE)\r\n\r\n    class Meta:\r\n        unique_together = ('skill_name', 'skill_character')\r\n\r\nclass HitPoints(models.Model):\r\n    hit_points_current = models.PositiveSmallIntegerField(default=10)\r\n    hit_points_max = models.PositiveSmallIntegerField(default=10)\r\n    hit_points_temp = models.PositiveSmallIntegerField(default=0)\r\n    non_lethal_damage = models.PositiveSmallIntegerField(default=0)\r\n    hit_points_character = models.OneToOneField(CharacterStats, on_delete=models.CASCADE, related_name=\"hit_points\")\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/PenAndPapAR/models.py b/PenAndPapAR/models.py
--- a/PenAndPapAR/models.py	(revision df52cb18cb6cf5451b986573c1a7f96eaddf61b0)
+++ b/PenAndPapAR/models.py	(date 1741830890299)
@@ -1,18 +1,28 @@
 from django.db import models
+from django.utils.functional import empty
+
 
 class CharacterStats(models.Model):
     character_id = models.CharField(max_length=50, primary_key=True)
     character_is_inspired = models.BooleanField(default=False, null=True)
-    character_name = models.CharField(max_length=50, null=True)
-    character_class = models.CharField(max_length=50, null=True)
-    character_race = models.CharField(max_length=50, null=True)
-    character_background = models.CharField(max_length=50, null=True)
-    character_subclass = models.CharField(max_length=50, null=True)
+    character_name = models.CharField(max_length=50, null=True, blank=True)
+    character_class = models.CharField(max_length=50, null=True, blank=True)
+    character_race = models.CharField(max_length=50, null=True, blank=True)
+    character_background = models.CharField(max_length=50, null=True, blank=True)
+    character_subclass = models.CharField(max_length=50, null=True, blank=True)
     character_level = models.PositiveSmallIntegerField(default=3, null=True)
-    character_alignment = models.CharField(max_length=50, null=True)
-    character_conditions = models.TextField(null=True)
-    character_update_link = models.URLField(null=True)
-    character_proficiency_bonus = models.PositiveSmallIntegerField(default=2, null=True)
+    character_alignment = models.CharField(max_length=50, null=True, blank=True)
+    character_conditions = models.TextField(null=True, blank=True)
+    character_update_link = models.URLField(null=True, blank=True)
+    character_proficiency_bonus = models.PositiveSmallIntegerField(default=2, null=True, blank=True)
+
+    character_gender = models.CharField(max_length=50, null=True, blank=True)
+    character_death_save_success = models.PositiveSmallIntegerField(default=0, null=True)
+    character_death_save_failure = models.PositiveSmallIntegerField(default=0, null=True)
+    character_exhaustion = models.PositiveSmallIntegerField(default=0, null=True)
+    character_speed = models.PositiveSmallIntegerField(default=30, null=True)
+    character_initiative_adjustment = models.PositiveSmallIntegerField(default=0, null=True)
+    character_proficiency_bonus_adjustment = models.PositiveSmallIntegerField(default=0, null=True)
 
 class Attributes(models.Model):
     attribute_name = models.CharField(max_length=20)
Index: PenAndPapAR/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from rest_framework import status\r\nfrom rest_framework.response import Response\r\nfrom rest_framework.views import APIView\r\nfrom rest_framework.viewsets import ModelViewSet\r\n\r\nfrom PenAndPapAR.models import Attributes, CharacterStats, AC, SavingThrowProficiencies, Skills, HitPoints\r\nfrom PenAndPapAR.serializers import (\r\n    CharacterStatsSerializer,\r\n    AttributesSerializer,\r\n    ACSerializer,\r\n    SavingThrowProficienciesSerializer,\r\n    SkillsSerializer,\r\n    HitPointsSerializer\r\n)\r\n\r\n# Templates für Standardwerte\r\ncharacter_stats_template = {\r\n    \"character_is_inspired\": False,\r\n    \"character_name\": None,\r\n    \"character_class\": None,\r\n    \"character_race\": None,\r\n    \"character_background\": None,\r\n    \"character_subclass\": None,\r\n    \"character_level\": 1,\r\n    \"character_alignment\": None,\r\n    \"character_conditions\": None,\r\n    \"character_source_link\": None,\r\n    \"character_proficiency_bonus\": 2\r\n}\r\n\r\nattribute_template = {\r\n    \"attribute_name\": \"strength\",\r\n    \"attribute_value\": 10,\r\n    \"attribute_adjustment\": 0\r\n}\r\n\r\nac_template = {\r\n    \"ac_base\": 10,\r\n    \"ac_modified\": 0\r\n}\r\n\r\nsaving_throw_proficiencies_template = {\r\n    \"saving_throw_name\": \"strength\",\r\n    \"saving_throw_adjustment\": 0,\r\n    \"saving_throw_is_proficient\": False}\r\n\r\nskills_template = {\r\n    \"skill_name\": \"athletics\",\r\n    \"skill_adjustment\": 0,\r\n    \"skill_is_proficient\": False,\r\n    \"skill_is_expertise\": False\r\n}\r\n\r\nhit_points_template = {\r\n    \"hit_points_current\": 30,\r\n    \"hit_points_max\": 30,\r\n    \"hit_points_temp\": 0,\r\n    \"non_lethal_damage\": 0\r\n}\r\n\r\n\r\ntemplates = [\r\n    character_stats_template,\r\n    attribute_template,\r\n    ac_template,\r\n    saving_throw_proficiencies_template,\r\n    skills_template,\r\n    hit_points_template\r\n]\r\n\r\n\r\nclass CharacterStatsView(APIView):\r\n    def get(self, request, *args, **kwargs):\r\n        character_id = request.GET.get('character_id', \"#0000\")\r\n\r\n\r\n        character_stats = CharacterStats.objects.filter(character_id=character_id)\r\n        character_attributes = Attributes.objects.filter(attribute_character=character_id)\r\n        character_ac = AC.objects.filter(ac_character=character_id)\r\n        character_saving_throw_proficiencies = SavingThrowProficiencies.objects.filter(\r\n            saving_throw_proficiency_character=character_id)\r\n        character_skills = Skills.objects.filter(skill_character=character_id)\r\n        character_hit_points = HitPoints.objects.filter(hit_points_character=character_id)\r\n\r\n        stats_serializer = CharacterStatsSerializer(character_stats, many=True)\r\n        attributes_serializer = AttributesSerializer(character_attributes, many=True)\r\n        ac_serializer = ACSerializer(character_ac, many=True)\r\n        saving_throw_proficiencies_serializer = SavingThrowProficienciesSerializer(\r\n            character_saving_throw_proficiencies, many=True)\r\n        skills_serializer = SkillsSerializer(character_skills, many=True)\r\n        hit_points_serializer = HitPointsSerializer(character_hit_points, many=True)\r\n\r\n        serializer_set = [stats_serializer,\r\n                          attributes_serializer,\r\n                          ac_serializer,\r\n                          saving_throw_proficiencies_serializer,\r\n                          skills_serializer,\r\n                          hit_points_serializer]\r\n\r\n        return Response(\r\n            {\r\n                \"stats\": stats_serializer.data,\r\n                \"attributes\": attributes_serializer.data,\r\n                \"ac\": ac_serializer.data,\r\n                \"saving_throw_proficiencies\": saving_throw_proficiencies_serializer.data,\r\n                \"skills\": skills_serializer.data,\r\n                \"hit_points\": hit_points_serializer.data,\r\n            }, status=status.HTTP_200_OK)\r\n\r\n    def post(self, request):\r\n        # prepare lists\r\n        skill_name_list = [\r\n            \"acrobatics\",\r\n            \"animal_handling\",\r\n            \"arcana\",\r\n            \"athletics\",\r\n            \"deception\",\r\n            \"history\",\r\n            \"insight\",\r\n            \"intimidation\",\r\n            \"investigation\",\r\n            \"medicine\",\r\n            \"nature\",\r\n            \"perception\",\r\n            \"performance\",\r\n            \"persuasion\",\r\n            \"religion\",\r\n            \"sleight_of_hand\",\r\n            \"stealth\",\r\n            \"survival\"\r\n        ]\r\n        topics = [\"stats\", \"attributes\", \"ac\", \"saving_throw_proficiencies\", \"skills\", \"hit_points\",]\r\n        attribute_name_list = [\"strength\", \"dexterity\", \"constitution\", \"intelligence\", \"wisdom\", \"charisma\"]\r\n        saving_throw_name_list = [\"strength\", \"dexterity\", \"constitution\", \"intelligence\", \"wisdom\", \"charisma\"]\r\n\r\n        # prepare and validate data from request\r\n        data = request.data\r\n        attributes_data = request.data.get(\"attributes\")\r\n        saving_throw_proficiencies_data = request.data.get(\"saving_throw_proficiencies\")\r\n        skills_data = request.data.get(\"skills\")\r\n\r\n        invalid_topic = validate_post_request(topics, data)\r\n        if(invalid_topic is not None):\r\n            return Response({\"error\": f\"Missing data for topic '{invalid_topic}'.\"},\r\n                            status=status.HTTP_400_BAD_REQUEST)\r\n\r\n        # generate missing Traits\r\n        attributes_data.extend(generate_character_trait(attribute_name_list, attributes_data, \"attribute\"))\r\n        saving_throw_proficiencies_data.extend(generate_character_trait(saving_throw_name_list,\r\n                                                                        saving_throw_proficiencies_data,\r\n                                                                        \"saving_throw\"))\r\n        skills_data.extend(generate_character_trait(skill_name_list, skills_data, \"skill\"))\r\n\r\n        # generate and add Character ID to connect relations between tables\r\n        generated_id = generate_character_id()\r\n        data[\"stats\"][0][\"character_id\"] = generated_id\r\n        data[\"ac\"][0][\"ac_character\"] = generated_id\r\n        data[\"hit_points\"][0][\"hit_points_character\"] = generated_id\r\n\r\n        data_list = [attributes_data, saving_throw_proficiencies_data, skills_data]\r\n        foreign_key_list = [\"attribute_character\", \"saving_throw_proficiency_character\", \"skill_character\"]\r\n\r\n        for datas in data_list:\r\n            for json_element in datas:\r\n                json_element.update({foreign_key_list[data_list.index(datas)]: generated_id})\r\n        # initialize serializers\r\n        stats_serializer = CharacterStatsSerializer(data=data[\"stats\"], many=True)\r\n        attributes_serializer = AttributesSerializer(data=data[\"attributes\"], many=True)\r\n        ac_serializer = ACSerializer(data=data[\"ac\"], many=True)\r\n        saving_throw_proficiencies_serializer = SavingThrowProficienciesSerializer(data=data[\"saving_throw_proficiencies\"],\r\n                                                                               many=True)\r\n        skills_serializer = SkillsSerializer(data=data[\"skills\"], many=True)\r\n        hit_points_serializer = HitPointsSerializer(data=data[\"hit_points\"], many=True)\r\n\r\n        serializer_set = [stats_serializer,\r\n                          attributes_serializer,\r\n                          ac_serializer,\r\n                          saving_throw_proficiencies_serializer,\r\n                          skills_serializer,\r\n                          hit_points_serializer]\r\n\r\n        # validate data with serializers and save valid data to db\r\n        counter = 0\r\n        for serializer in serializer_set:\r\n            if serializer.is_valid():\r\n                serializer.save()\r\n            else:\r\n                return Response({\"error\": f\"Invalid data in character {topics[counter]}.\\n\"\r\n                                          f\"{serializer.errors}\"},\r\n                                status=status.HTTP_400_BAD_REQUEST)\r\n            counter += 1\r\n\r\n        return Response({\"message\": \"Data has been successfully processed.\"}, status=status.HTTP_200_OK)\r\n\r\n\r\n    def put(self, request):\r\n\r\n        try:\r\n            data = request.data\r\n            stats_data = request.data.get(\"stats\")\r\n            attributes_data = request.data.get(\"attributes\")\r\n            saving_throw_proficiencies_data = request.data.get(\"saving_throw_proficiencies\")\r\n            ac_data = request.data.get(\"ac\")\r\n            skills_data = request.data.get(\"skills\")\r\n            hit_points_data = request.data.get(\"hit_points\")\r\n\r\n            character_id = stats_data[0][\"character_id\"]\r\n\r\n            character_stats_db = CharacterStats.objects.filter(character_id=character_id)\r\n            character_attributes_db = Attributes.objects.filter(attribute_character=character_id)\r\n            character_ac_db = AC.objects.filter(ac_character=character_id)\r\n            character_saving_throw_proficiencies_db = SavingThrowProficiencies.objects.filter(\r\n                saving_throw_proficiency_character=character_id)\r\n            character_skills_db = Skills.objects.filter(skill_character=character_id)\r\n            character_hit_points_db = HitPoints.objects.filter(hit_points_character=character_id)\r\n\r\n            if stats_data:\r\n                for stat in stats_data:\r\n                    character_stats_db.update(**stat)\r\n\r\n            if attributes_data:\r\n                for attr in attributes_data:\r\n                    for attr_db in character_attributes_db:\r\n                        if attr_db.attribute_name == attr[\"attribute_name\"]:\r\n                            if \"attribute_value\" in attr:\r\n                                attr_db.attribute_value = attr[\"attribute_value\"]\r\n                                attr_db.save()\r\n                            if \"attribute_adjustment\" in attr:\r\n                                attr_db.attribute_adjustment = attr[\"attribute_adjustment\"]\r\n\r\n                            break\r\n\r\n            if ac_data:\r\n                for ac_trait in ac_data:\r\n                    character_ac_db.update(**ac_trait)\r\n\r\n            if saving_throw_proficiencies_data:\r\n                for saving_throw_proficiency in saving_throw_proficiencies_data:\r\n                    for saving_throw_proficiency_db in character_saving_throw_proficiencies_db:\r\n                        if saving_throw_proficiency_db.saving_throw_name == saving_throw_proficiency[\"saving_throw_name\"]:\r\n                            if \"saving_throw_adjustment\" in saving_throw_proficiency:\r\n                                saving_throw_proficiency_db.saving_throw_adjustment = saving_throw_proficiency[\"saving_throw_adjustment\"]\r\n                            if \"saving_throw_is_proficient\" in saving_throw_proficiency:\r\n                                saving_throw_proficiency_db.saving_throw_is_proficient = saving_throw_proficiency[\"saving_throw_is_proficient\"]\r\n                            break\r\n            if skills_data:\r\n                for skill in skills_data:\r\n                    for skill_db in character_skills_db:\r\n                        if skill_db.skill_name == skill[\"skill_name\"]:\r\n                            if \"skill_adjustment\" in skill:\r\n                                skill_db.skill_adjustment = skill[\"skill_adjustment\"]\r\n                            if \"skill_is_proficient\" in skill:\r\n                                skill_db.skill_is_proficient = skill[\"skill_is_proficient\"]\r\n                            if \"skill_is_expertise\" in skill:\r\n                                skill_db.skill_is_expertise = skill[\"skill_is_expertise\"]\r\n\r\n            if hit_points_data:\r\n                for hit_point_trait in hit_points_data:\r\n                    character_hit_points_db.update(**hit_point_trait)\r\n\r\n\r\n\r\n\r\n            return Response({\r\n                \"stats\": CharacterStatsSerializer(character_stats_db, many=True).data,\r\n                \"attributes\": AttributesSerializer(character_attributes_db, many=True).data,\r\n                \"ac\": ACSerializer(character_ac_db, many=True).data,\r\n                \"saving_throw_proficiencies\": SavingThrowProficienciesSerializer(character_saving_throw_proficiencies_db,\r\n                                                                                 many=True).data,\r\n                \"skills\": SkillsSerializer(character_skills_db, many=True).data,\r\n                \"hit_points\": HitPointsSerializer(character_hit_points_db, many=True).data,\r\n            }, status=status.HTTP_200_OK)\r\n        except:\r\n            return Response({\"error\": \"Couldn't find information about character ID\"},\r\n                            status=status.HTTP_400_BAD_REQUEST)\r\n\r\ndef generate_character_id():\r\n    existing_ids = CharacterStats.objects.values_list('character_id', flat=True).order_by('character_id')\r\n    min_free_id = 0\r\n\r\n    for i in existing_ids:\r\n        numeric_id = int(i[1:])  # Ignoriere das `#` am Anfang\r\n        if numeric_id == min_free_id:\r\n            min_free_id += 1  # Suche die nächste freie ID\r\n        else:\r\n            break\r\n    formatted_character_id = f\"#{min_free_id:04d}\"\r\n    return formatted_character_id\r\n\r\ndef validate_post_request(field_names, data):\r\n\r\n    for topic in field_names:\r\n        if topic not in data or not data[topic]:\r\n            return topic\r\n        else:\r\n            for stat in data[topic]:\r\n                for key, default_value in templates[field_names.index(topic)].items():\r\n                    if key not in stat or stat[key] is None:\r\n                        stat[key] = default_value\r\n    return None\r\n\r\n\r\ndef generate_character_trait(name_list, trait_data, field):\r\n    for trait in trait_data:\r\n        if trait[f\"{field}_name\"] not in name_list:\r\n            return Response({\"error\": f\"Invalid trait name '{trait[f'{field}_name']}'.\"}, )\r\n        else:\r\n            name_list.remove(trait[f\"{field}_name\"])\r\n\r\n    missing_traits = []\r\n    for trait in name_list:\r\n        if field == \"attribute\":\r\n            trait_data.append(\r\n                        {\r\n                            f\"{field}_name\": trait,\r\n                            f\"{field}_value\": 10,\r\n                            f\"{field}_adjustment\": 0,\r\n                        }\r\n            )\r\n        elif field == \"saving_throw\":\r\n            trait_data.append(\r\n                        {\r\n                            f\"{field}_name\": trait,\r\n                            f\"{field}_adjustment\": 0,\r\n                            f\"{field}_is_proficient\": False,\r\n                        }\r\n            )\r\n        elif field == \"skill\":\r\n            trait_data.append(\r\n                        {\r\n                            f\"{field}_name\": trait,\r\n                            f\"{field}_adjustment\": 0,\r\n                            f\"{field}_is_proficient\": False,\r\n                            f\"{field}_is_expertise\": False,\r\n                        }\r\n            )\r\n\r\n    return missing_traits\r\n\r\ndef update_character_stats(data, data_db):\r\n\r\n    for skill in skills_data:\r\n        for skill_db in character_skills_db:\r\n            if skill_db.skill_name == skill[\"skill_name\"]:\r\n                if \"skill_adjustment\" in skill:\r\n                    skill_db.skill_adjustment = skill[\"skill_adjustment\"]\r\n                if \"skill_is_proficient\" in skill:\r\n                    skill_db.skill_is_proficient = skill[\"skill_is_proficient\"]\r\n                if \"skill_is_expertise\" in skill:\r\n                    skill_db.skill_is_expertise = skill[\"skill_is_expertise\"]\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/PenAndPapAR/views.py b/PenAndPapAR/views.py
--- a/PenAndPapAR/views.py	(revision df52cb18cb6cf5451b986573c1a7f96eaddf61b0)
+++ b/PenAndPapAR/views.py	(date 1741844188561)
@@ -25,7 +25,15 @@
     "character_alignment": None,
     "character_conditions": None,
     "character_source_link": None,
-    "character_proficiency_bonus": 2
+    "character_proficiency_bonus": 2,
+
+    "character_speed": 30,
+    "character_gender": None,
+    "character_death_save_success": None,
+    "character_death_save_failure": None,
+    "character_exhaustion": None,
+    "character_initiative_adjustment": None,
+    "character_proficiency_bonus_adjustment": 0
 }
 
 attribute_template = {
@@ -71,6 +79,7 @@
 
 class CharacterStatsView(APIView):
     def get(self, request, *args, **kwargs):
+        print("GET Request Arrived")
         character_id = request.GET.get('character_id', "#0000")
 
 
@@ -194,8 +203,8 @@
 
 
     def put(self, request):
-
         try:
+            print("PUT Request Arrived")
             data = request.data
             stats_data = request.data.get("stats")
             attributes_data = request.data.get("attributes")
@@ -224,10 +233,10 @@
                         if attr_db.attribute_name == attr["attribute_name"]:
                             if "attribute_value" in attr:
                                 attr_db.attribute_value = attr["attribute_value"]
-                                attr_db.save()
                             if "attribute_adjustment" in attr:
                                 attr_db.attribute_adjustment = attr["attribute_adjustment"]
 
+                            attr_db.save()
                             break
 
             if ac_data:
@@ -239,9 +248,12 @@
                     for saving_throw_proficiency_db in character_saving_throw_proficiencies_db:
                         if saving_throw_proficiency_db.saving_throw_name == saving_throw_proficiency["saving_throw_name"]:
                             if "saving_throw_adjustment" in saving_throw_proficiency:
-                                saving_throw_proficiency_db.saving_throw_adjustment = saving_throw_proficiency["saving_throw_adjustment"]
+                                saving_throw_proficiency_db.saving_throw_adjustment = saving_throw_proficiency[
+                                    "saving_throw_adjustment"]
                             if "saving_throw_is_proficient" in saving_throw_proficiency:
-                                saving_throw_proficiency_db.saving_throw_is_proficient = saving_throw_proficiency["saving_throw_is_proficient"]
+                                saving_throw_proficiency_db.saving_throw_is_proficient = saving_throw_proficiency[
+                                    "saving_throw_is_proficient"]
+                            saving_throw_proficiency_db.save()
                             break
             if skills_data:
                 for skill in skills_data:
@@ -253,14 +265,13 @@
                                 skill_db.skill_is_proficient = skill["skill_is_proficient"]
                             if "skill_is_expertise" in skill:
                                 skill_db.skill_is_expertise = skill["skill_is_expertise"]
+                            skill_db.save()
+                            break
 
             if hit_points_data:
                 for hit_point_trait in hit_points_data:
                     character_hit_points_db.update(**hit_point_trait)
 
-
-
-
             return Response({
                 "stats": CharacterStatsSerializer(character_stats_db, many=True).data,
                 "attributes": AttributesSerializer(character_attributes_db, many=True).data,
@@ -270,9 +281,8 @@
                 "skills": SkillsSerializer(character_skills_db, many=True).data,
                 "hit_points": HitPointsSerializer(character_hit_points_db, many=True).data,
             }, status=status.HTTP_200_OK)
-        except:
-            return Response({"error": "Couldn't find information about character ID"},
-                            status=status.HTTP_400_BAD_REQUEST)
+        except Exception as e:
+            return Response({"error": f"An error occurred: {e}"}, status=status.HTTP_400_BAD_REQUEST)
 
 def generate_character_id():
     existing_ids = CharacterStats.objects.values_list('character_id', flat=True).order_by('character_id')
Index: PenAndPapARDB/TestJsons/CharacterGet.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/PenAndPapARDB/TestJsons/CharacterGet.json b/PenAndPapARDB/TestJsons/CharacterGet.json
new file mode 100644
--- /dev/null	(date 1741831051317)
+++ b/PenAndPapARDB/TestJsons/CharacterGet.json	(date 1741831051317)
@@ -0,0 +1,277 @@
+{
+  "stats": [
+    {
+      "character_id": "#0000",
+      "character_is_inspired": false,
+      "character_name": "",
+      "character_class": "",
+      "character_race": "",
+      "character_background": "",
+      "character_subclass": "",
+      "character_level": 1,
+      "character_alignment": "",
+      "character_conditions": "",
+      "character_update_link": null,
+      "character_proficiency_bonus": 2,
+      "character_gender": "",
+      "character_death_save_success": 0,
+      "character_death_save_failure": 0,
+      "character_exhaustion": 0,
+      "character_speed": 30,
+      "character_initiative_adjustment": 0,
+      "character_proficiency_bonus_adjustment": 0
+    }
+  ],
+  "attributes": [
+    {
+      "id": 1,
+      "attribute_name": "strength",
+      "attribute_value": 10,
+      "attribute_adjustment": 0,
+      "attribute_character": "#0000"
+    },
+    {
+      "id": 2,
+      "attribute_name": "dexterity",
+      "attribute_value": 10,
+      "attribute_adjustment": 0,
+      "attribute_character": "#0000"
+    },
+    {
+      "id": 3,
+      "attribute_name": "constitution",
+      "attribute_value": 10,
+      "attribute_adjustment": 0,
+      "attribute_character": "#0000"
+    },
+    {
+      "id": 4,
+      "attribute_name": "intelligence",
+      "attribute_value": 10,
+      "attribute_adjustment": 0,
+      "attribute_character": "#0000"
+    },
+    {
+      "id": 5,
+      "attribute_name": "wisdom",
+      "attribute_value": 10,
+      "attribute_adjustment": 0,
+      "attribute_character": "#0000"
+    },
+    {
+      "id": 6,
+      "attribute_name": "charisma",
+      "attribute_value": 10,
+      "attribute_adjustment": 0,
+      "attribute_character": "#0000"
+    }
+  ],
+  "ac": [
+    {
+      "id": 1,
+      "ac_base": 10,
+      "ac_modified": 0,
+      "ac_character": "#0000"
+    }
+  ],
+  "saving_throw_proficiencies": [
+    {
+      "id": 1,
+      "saving_throw_name": "strength",
+      "saving_throw_adjustment": 0,
+      "saving_throw_is_proficient": false,
+      "saving_throw_proficiency_character": "#0000"
+    },
+    {
+      "id": 2,
+      "saving_throw_name": "dexterity",
+      "saving_throw_adjustment": 0,
+      "saving_throw_is_proficient": false,
+      "saving_throw_proficiency_character": "#0000"
+    },
+    {
+      "id": 3,
+      "saving_throw_name": "constitution",
+      "saving_throw_adjustment": 0,
+      "saving_throw_is_proficient": false,
+      "saving_throw_proficiency_character": "#0000"
+    },
+    {
+      "id": 4,
+      "saving_throw_name": "intelligence",
+      "saving_throw_adjustment": 0,
+      "saving_throw_is_proficient": false,
+      "saving_throw_proficiency_character": "#0000"
+    },
+    {
+      "id": 5,
+      "saving_throw_name": "wisdom",
+      "saving_throw_adjustment": 0,
+      "saving_throw_is_proficient": false,
+      "saving_throw_proficiency_character": "#0000"
+    },
+    {
+      "id": 6,
+      "saving_throw_name": "charisma",
+      "saving_throw_adjustment": 0,
+      "saving_throw_is_proficient": false,
+      "saving_throw_proficiency_character": "#0000"
+    }
+  ],
+  "skills": [
+    {
+      "id": 1,
+      "skill_name": "athletics",
+      "skill_adjustment": 0,
+      "skill_is_proficient": false,
+      "skill_is_expertise": false,
+      "skill_character": "#0000"
+    },
+    {
+      "id": 2,
+      "skill_name": "acrobatics",
+      "skill_adjustment": 0,
+      "skill_is_proficient": false,
+      "skill_is_expertise": false,
+      "skill_character": "#0000"
+    },
+    {
+      "id": 3,
+      "skill_name": "animal_handling",
+      "skill_adjustment": 0,
+      "skill_is_proficient": false,
+      "skill_is_expertise": false,
+      "skill_character": "#0000"
+    },
+    {
+      "id": 4,
+      "skill_name": "arcana",
+      "skill_adjustment": 0,
+      "skill_is_proficient": false,
+      "skill_is_expertise": false,
+      "skill_character": "#0000"
+    },
+    {
+      "id": 5,
+      "skill_name": "deception",
+      "skill_adjustment": 0,
+      "skill_is_proficient": false,
+      "skill_is_expertise": false,
+      "skill_character": "#0000"
+    },
+    {
+      "id": 6,
+      "skill_name": "history",
+      "skill_adjustment": 0,
+      "skill_is_proficient": false,
+      "skill_is_expertise": false,
+      "skill_character": "#0000"
+    },
+    {
+      "id": 7,
+      "skill_name": "insight",
+      "skill_adjustment": 0,
+      "skill_is_proficient": false,
+      "skill_is_expertise": false,
+      "skill_character": "#0000"
+    },
+    {
+      "id": 8,
+      "skill_name": "intimidation",
+      "skill_adjustment": 0,
+      "skill_is_proficient": false,
+      "skill_is_expertise": false,
+      "skill_character": "#0000"
+    },
+    {
+      "id": 9,
+      "skill_name": "investigation",
+      "skill_adjustment": 0,
+      "skill_is_proficient": false,
+      "skill_is_expertise": false,
+      "skill_character": "#0000"
+    },
+    {
+      "id": 10,
+      "skill_name": "medicine",
+      "skill_adjustment": 0,
+      "skill_is_proficient": false,
+      "skill_is_expertise": false,
+      "skill_character": "#0000"
+    },
+    {
+      "id": 11,
+      "skill_name": "nature",
+      "skill_adjustment": 0,
+      "skill_is_proficient": false,
+      "skill_is_expertise": false,
+      "skill_character": "#0000"
+    },
+    {
+      "id": 12,
+      "skill_name": "perception",
+      "skill_adjustment": 0,
+      "skill_is_proficient": false,
+      "skill_is_expertise": false,
+      "skill_character": "#0000"
+    },
+    {
+      "id": 13,
+      "skill_name": "performance",
+      "skill_adjustment": 0,
+      "skill_is_proficient": false,
+      "skill_is_expertise": false,
+      "skill_character": "#0000"
+    },
+    {
+      "id": 14,
+      "skill_name": "persuasion",
+      "skill_adjustment": 0,
+      "skill_is_proficient": false,
+      "skill_is_expertise": false,
+      "skill_character": "#0000"
+    },
+    {
+      "id": 15,
+      "skill_name": "religion",
+      "skill_adjustment": 0,
+      "skill_is_proficient": false,
+      "skill_is_expertise": false,
+      "skill_character": "#0000"
+    },
+    {
+      "id": 16,
+      "skill_name": "sleight_of_hand",
+      "skill_adjustment": 0,
+      "skill_is_proficient": false,
+      "skill_is_expertise": false,
+      "skill_character": "#0000"
+    },
+    {
+      "id": 17,
+      "skill_name": "stealth",
+      "skill_adjustment": 0,
+      "skill_is_proficient": false,
+      "skill_is_expertise": false,
+      "skill_character": "#0000"
+    },
+    {
+      "id": 18,
+      "skill_name": "survival",
+      "skill_adjustment": 0,
+      "skill_is_proficient": false,
+      "skill_is_expertise": false,
+      "skill_character": "#0000"
+    }
+  ],
+  "hit_points": [
+    {
+      "id": 1,
+      "hit_points_current": 30,
+      "hit_points_max": 30,
+      "hit_points_temp": 0,
+      "non_lethal_damage": 0,
+      "hit_points_character": "#0000"
+    }
+  ]
+}
Index: PenAndPapARDB/TestJsons/CompleteCharacterPost.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/PenAndPapARDB/TestJsons/CompleteCharacterPost.json b/PenAndPapARDB/TestJsons/CompleteCharacterPost.json
new file mode 100644
--- /dev/null	(date 1741833152747)
+++ b/PenAndPapARDB/TestJsons/CompleteCharacterPost.json	(date 1741833152747)
@@ -0,0 +1,212 @@
+{
+  "stats": [
+    {
+      "character_is_inspired": false,
+      "character_name": "Faelyndiira",
+      "character_class": "Sorcerer",
+      "character_race": "Drow",
+      "character_background": "Acolythe",
+      "character_subclass": "Draconic",
+      "character_level": 9,
+      "character_alignment": "Neutral",
+      "character_conditions": "Frightened",
+      "character_update_link": "",
+      "character_proficiency_bonus": 4,
+      "character_speed": 30,
+      "character_gender": "Female",
+      "character_death_save_success": 0,
+      "character_death_save_failure": 0,
+      "character_exhaustion": 0,
+      "character_initiative_adjustment": 0,
+      "character_proficiency_bonus_adjustment": 0
+    }
+  ],
+  "attributes": [
+    {
+      "attribute_name": "strength",
+      "attribute_value": 8,
+      "attribute_adjustment": 0
+    },
+    {
+      "attribute_name": "dexterity",
+      "attribute_value": 15,
+      "attribute_adjustment": 0
+    },
+    {
+      "attribute_name": "constitution",
+      "attribute_value": 16,
+      "attribute_adjustment": 0
+    },
+    {
+      "attribute_name": "intelligence",
+      "attribute_value": 13,
+      "attribute_adjustment": 0
+    },
+    {
+      "attribute_name": "wisdom",
+      "attribute_value": 18,
+      "attribute_adjustment": 0
+    },
+    {
+      "attribute_name": "charisma",
+      "attribute_value": 19,
+      "attribute_adjustment": 0
+    }
+  ],
+  "ac": [
+    {
+      "ac_base": 10,
+      "ac_modified": 0
+    }
+  ],
+  "saving_throw_proficiencies": [
+    {
+      "saving_throw_name": "strength",
+      "saving_throw_adjustment": 0,
+      "saving_throw_is_proficient": false
+    },
+    {
+      "saving_throw_name": "dexterity",
+      "saving_throw_adjustment": 0,
+      "saving_throw_is_proficient": true
+    },
+    {
+      "saving_throw_name": "constitution",
+      "saving_throw_adjustment": 0,
+      "saving_throw_is_proficient": false
+    },
+    {
+      "saving_throw_name": "intelligence",
+      "saving_throw_adjustment": 0,
+      "saving_throw_is_proficient": false
+    },
+    {
+      "saving_throw_name": "wisdom",
+      "saving_throw_adjustment": 0,
+      "saving_throw_is_proficient": false
+    },
+    {
+      "saving_throw_name": "charisma",
+      "saving_throw_adjustment": 0,
+      "saving_throw_is_proficient": true
+    }
+  ],
+  "skills": [
+    {
+      "skill_name": "athletics",
+      "skill_adjustment": 0,
+      "skill_is_proficient": false,
+      "skill_is_expertise": false
+    },
+    {
+      "skill_name": "acrobatics",
+      "skill_adjustment": 0,
+      "skill_is_proficient": false,
+      "skill_is_expertise": false
+    },
+    {
+      "skill_name": "animal_handling",
+      "skill_adjustment": 0,
+      "skill_is_proficient": true,
+      "skill_is_expertise": false
+    },
+    {
+      "skill_name": "arcana",
+      "skill_adjustment": 0,
+      "skill_is_proficient": true,
+      "skill_is_expertise": false
+    },
+    {
+      "skill_name": "deception",
+      "skill_adjustment": 0,
+      "skill_is_proficient": true,
+      "skill_is_expertise": false
+    },
+    {
+      "skill_name": "history",
+      "skill_adjustment": 0,
+      "skill_is_proficient": false,
+      "skill_is_expertise": false
+    },
+    {
+      "skill_name": "insight",
+      "skill_adjustment": 0,
+      "skill_is_proficient": false,
+      "skill_is_expertise": false
+    },
+    {
+      "skill_name": "intimidation",
+      "skill_adjustment": 0,
+      "skill_is_proficient": true,
+      "skill_is_expertise": false
+    },
+    {
+      "skill_name": "investigation",
+      "skill_adjustment": 0,
+      "skill_is_proficient": false,
+      "skill_is_expertise": false
+    },
+    {
+      "skill_name": "medicine",
+      "skill_adjustment": 0,
+      "skill_is_proficient": true,
+      "skill_is_expertise": false
+    },
+    {
+      "skill_name": "nature",
+      "skill_adjustment": 0,
+      "skill_is_proficient": true,
+      "skill_is_expertise": false
+    },
+    {
+      "skill_name": "perception",
+      "skill_adjustment": 0,
+      "skill_is_proficient": false,
+      "skill_is_expertise": false
+    },
+    {
+      "skill_name": "performance",
+      "skill_adjustment": 0,
+      "skill_is_proficient": false,
+      "skill_is_expertise": false
+    },
+    {
+      "skill_name": "persuasion",
+      "skill_adjustment": 0,
+      "skill_is_proficient": false,
+      "skill_is_expertise": false
+    },
+    {
+      "skill_name": "religion",
+      "skill_adjustment": 0,
+      "skill_is_proficient": true,
+      "skill_is_expertise": false
+    },
+    {
+      "skill_name": "sleight_of_hand",
+      "skill_adjustment": 0,
+      "skill_is_proficient": false,
+      "skill_is_expertise": false
+    },
+    {
+      "skill_name": "stealth",
+      "skill_adjustment": 0,
+      "skill_is_proficient": false,
+      "skill_is_expertise": false
+    },
+    {
+      "skill_name": "survival",
+      "skill_adjustment": 0,
+      "skill_is_proficient": false,
+      "skill_is_expertise": false
+    }
+  ],
+  "hit_points": [
+    {
+      "hit_points_current": 30,
+      "hit_points_max": 40,
+      "hit_points_temp": 5,
+      "non_lethal_damage": 0
+    }
+  ]
+}
\ No newline at end of file
Index: PenAndPapARDB/settings.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"\r\nDjango settings for PenAndPapARDB project.\r\n\r\nGenerated by 'django-admin startproject' using Django 5.1.5.\r\n\r\nFor more information on this file, see\r\nhttps://docs.djangoproject.com/en/5.1/topics/settings/\r\n\r\nFor the full list of settings and their values, see\r\nhttps://docs.djangoproject.com/en/5.1/ref/settings/\r\n\"\"\"\r\n\r\nfrom pathlib import Path\r\n\r\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\r\nBASE_DIR = Path(__file__).resolve().parent.parent\r\n\r\n\r\n# Quick-start development settings - unsuitable for production\r\n# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/\r\n\r\n# SECURITY WARNING: keep the secret key used in production secret!\r\nSECRET_KEY = 'django-insecure-i%%9#$-6218a90r_zp01zzo9)@5n^1**ejh1y6@&@8v645-3wj'\r\n\r\n# SECURITY WARNING: don't run with debug turned on in production!\r\nDEBUG = True\r\n\r\nALLOWED_HOSTS = []\r\n\r\n\r\n# Application definition\r\n\r\nINSTALLED_APPS = [\r\n    'django.contrib.admin',\r\n    'django.contrib.auth',\r\n    'django.contrib.contenttypes',\r\n    'django.contrib.sessions',\r\n    'django.contrib.messages',\r\n    'django.contrib.staticfiles',\r\n    'PenAndPapAR',\r\n    'rest_framework',\r\n]\r\n\r\nMIDDLEWARE = [\r\n    'django.middleware.security.SecurityMiddleware',\r\n    'django.contrib.sessions.middleware.SessionMiddleware',\r\n    'django.middleware.common.CommonMiddleware',\r\n    'django.middleware.csrf.CsrfViewMiddleware',\r\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n    'django.contrib.messages.middleware.MessageMiddleware',\r\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\r\n]\r\n\r\nROOT_URLCONF = 'PenAndPapARDB.urls'\r\n\r\nTEMPLATES = [\r\n    {\r\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\r\n        'DIRS': [BASE_DIR / 'templates']\r\n        ,\r\n        'APP_DIRS': True,\r\n        'OPTIONS': {\r\n            'context_processors': [\r\n                'django.template.context_processors.debug',\r\n                'django.template.context_processors.request',\r\n                'django.contrib.auth.context_processors.auth',\r\n                'django.contrib.messages.context_processors.messages',\r\n\r\n            ],\r\n        },\r\n    },\r\n]\r\n\r\nWSGI_APPLICATION = 'PenAndPapARDB.wsgi.application'\r\n\r\n\r\n# Database\r\n# https://docs.djangoproject.com/en/5.1/ref/settings/#databases\r\n\r\nDATABASES = {\r\n    'default': {\r\n        'ENGINE': 'django.db.backends.sqlite3',\r\n        'NAME': BASE_DIR / 'db.sqlite3',\r\n    }\r\n}\r\n\r\n\r\n# Password validation\r\n# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators\r\n\r\nAUTH_PASSWORD_VALIDATORS = [\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\r\n    },\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\r\n    },\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\r\n    },\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\r\n    },\r\n]\r\n\r\n\r\n# Internationalization\r\n# https://docs.djangoproject.com/en/5.1/topics/i18n/\r\n\r\nLANGUAGE_CODE = 'en-us'\r\n\r\nTIME_ZONE = 'UTC'\r\n\r\nUSE_I18N = True\r\n\r\nUSE_TZ = True\r\n\r\n\r\n# Static files (CSS, JavaScript, Images)\r\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\r\n\r\nSTATIC_URL = 'static/'\r\n\r\n# Default primary key field type\r\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\r\n\r\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/PenAndPapARDB/settings.py b/PenAndPapARDB/settings.py
--- a/PenAndPapARDB/settings.py	(revision df52cb18cb6cf5451b986573c1a7f96eaddf61b0)
+++ b/PenAndPapARDB/settings.py	(date 1741791822594)
@@ -28,6 +28,7 @@
 ALLOWED_HOSTS = []
 
 
+
 # Application definition
 
 INSTALLED_APPS = [
@@ -39,6 +40,8 @@
     'django.contrib.staticfiles',
     'PenAndPapAR',
     'rest_framework',
+    'corsheaders',
+
 ]
 
 MIDDLEWARE = [
@@ -49,7 +52,11 @@
     'django.contrib.auth.middleware.AuthenticationMiddleware',
     'django.contrib.messages.middleware.MessageMiddleware',
     'django.middleware.clickjacking.XFrameOptionsMiddleware',
+    'corsheaders.middleware.CorsMiddleware',
+
 ]
+
+CORS_ALLOW_ALL_ORIGINS = True  # Oder spezifische Origins einfügen
 
 ROOT_URLCONF = 'PenAndPapARDB.urls'
 
Index: PenAndPapARDB/TestJsons/MinimalCharacterPut.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"stats\": [\r\n    {\r\n      \"character_id\": \"#0002\",\r\n      \"character_name\": \"Symonya\"\r\n    }\r\n  ],\r\n  \"attributes\":[\r\n    {\r\n      \"attribute_name\": \"strength\",\r\n      \"attribute_value\": 20\r\n    }\r\n  ],\r\n  \"ac\": [\r\n    {\r\n      \"ac_base\": 14\r\n    }\r\n  ],\r\n  \"saving_throw_proficiencies\": [\r\n    {\r\n      \"saving_throw_name\": \"strength\",\r\n      \"saving_throw_is_proficient\": true\r\n    }\r\n  ],\r\n  \"skills\": [\r\n    {\r\n      \"skill_name\": \"athletics\",\r\n      \"skill_is_proficient\": true\r\n    }\r\n  ],\r\n  \"hit_points\": [\r\n    {\r\n      \"hit_points_current\": 5\r\n    }\r\n  ]\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/PenAndPapARDB/TestJsons/MinimalCharacterPut.json b/PenAndPapARDB/TestJsons/MinimalCharacterPut.json
--- a/PenAndPapARDB/TestJsons/MinimalCharacterPut.json	(revision df52cb18cb6cf5451b986573c1a7f96eaddf61b0)
+++ b/PenAndPapARDB/TestJsons/MinimalCharacterPut.json	(date 1741832224449)
@@ -1,7 +1,7 @@
 {
   "stats": [
     {
-      "character_id": "#0002",
+      "character_id": "#0000",
       "character_name": "Symonya"
     }
   ],
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"e903e1d0-565b-486a-9b2b-44df1927bf6e\" name=\"Changes\" comment=\"finished main server sided CRUD Operations\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/PenAndPapAR/views.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/PenAndPapAR/views.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"DjangoConsoleOptions\" custom-start-script=\"import sys; print('Python %s on %s' % (sys.version, sys.platform))&#10;import django; print('Django %s' % django.get_version())&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;if 'setup' in dir(django): django.setup()&#10;import django_manage_shell; django_manage_shell.run(PROJECT_ROOT)\">\r\n    <option name=\"myCustomStartScript\" value=\"import sys; print('Python %s on %s' % (sys.version, sys.platform))&#10;import django; print('Django %s' % django.get_version())&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;if 'setup' in dir(django): django.setup()&#10;import django_manage_shell; django_manage_shell.run(PROJECT_ROOT)\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;Sc1p1o&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/Sc1p1o/PenAndPapARDB.git&quot;,\r\n    &quot;accountId&quot;: &quot;57dd039c-0bec-4ebb-9ccc-699f790b5dbb&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 8\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2sYQTsNfzy9K4infjVGGod0DLPR\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_MARK_IGNORED_FILES_AS_EXCLUDED&quot;: &quot;true&quot;,\r\n    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;Django Server.PenAndPapARDB.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenDjangoStructureViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.pycharm.django.structure.promotion.once.per.project&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;ml.llm.AIAssistantPromptsLibrary&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"PenAndPapARDB\" type=\"Python.DjangoServer\" factoryName=\"Django server\">\r\n      <module name=\"PenAndPapARDB\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n        <env name=\"DJANGO_SETTINGS_MODULE\" value=\"PenAndPapARDB.settings\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"launchJavascriptDebuger\" value=\"false\" />\r\n      <option name=\"port\" value=\"8000\" />\r\n      <option name=\"host\" value=\"\" />\r\n      <option name=\"additionalOptions\" value=\"\" />\r\n      <option name=\"browserUrl\" value=\"\" />\r\n      <option name=\"runTestServer\" value=\"false\" />\r\n      <option name=\"runNoReload\" value=\"false\" />\r\n      <option name=\"useCustomRunCommand\" value=\"false\" />\r\n      <option name=\"customRunCommand\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-1632447f56bf-JavaScript-PY-243.25659.43\" />\r\n        <option value=\"bundled-python-sdk-181015f7ab06-4df51de95216-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-243.25659.43\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"e903e1d0-565b-486a-9b2b-44df1927bf6e\" name=\"Changes\" comment=\"\" />\r\n      <created>1738630038906</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1738630038906</updated>\r\n      <workItem from=\"1738630040006\" duration=\"2732000\" />\r\n      <workItem from=\"1738676975107\" duration=\"2863000\" />\r\n      <workItem from=\"1740096317468\" duration=\"4578000\" />\r\n      <workItem from=\"1740754619033\" duration=\"3524000\" />\r\n      <workItem from=\"1741007585688\" duration=\"43000\" />\r\n      <workItem from=\"1741007637705\" duration=\"7524000\" />\r\n      <workItem from=\"1741286790072\" duration=\"26000\" />\r\n      <workItem from=\"1741286825196\" duration=\"16228000\" />\r\n      <workItem from=\"1741310962615\" duration=\"5716000\" />\r\n      <workItem from=\"1741348594924\" duration=\"3054000\" />\r\n      <workItem from=\"1741617552497\" duration=\"634000\" />\r\n      <workItem from=\"1741739395449\" duration=\"28125000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"InnitialCommit\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1738633235460</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1738633235460</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"InnitialCommit\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1738633424399</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1738633424399</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"added Items and feats\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1738678605506</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1738678605506</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"added Items and feats\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1738678618434</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1738678618434</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"added Items and feats\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1740100502421</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1740100502421</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"added Items and feats\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1740100931940</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1740100931940</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"added Items and feats\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1741016819995</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1741016819995</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"added Items and feats\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1741350961315</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1741350961315</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"finished main server sided CRUD Operations\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1741767487607</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1741767487607</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"finished main server sided CRUD Operations\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1741767729927</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1741767729927</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"finished main server sided CRUD Operations\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1741767809212</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1741767809212</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"12\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"InnitialCommit\" />\r\n    <MESSAGE value=\"added Items and feats\" />\r\n    <MESSAGE value=\"finished main server sided CRUD Operations\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"finished main server sided CRUD Operations\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision df52cb18cb6cf5451b986573c1a7f96eaddf61b0)
+++ b/.idea/workspace.xml	(date 1741844764584)
@@ -5,8 +5,15 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="e903e1d0-565b-486a-9b2b-44df1927bf6e" name="Changes" comment="finished main server sided CRUD Operations">
+      <change afterPath="$PROJECT_DIR$/PenAndPapARDB/TestJsons/CharacterGet.json" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PenAndPapARDB/TestJsons/CompleteCharacterPost.json" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/PenAndPapAR/models.py" beforeDir="false" afterPath="$PROJECT_DIR$/PenAndPapAR/models.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/PenAndPapAR/views.py" beforeDir="false" afterPath="$PROJECT_DIR$/PenAndPapAR/views.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/PenAndPapARDB/TestJsons/CompleteCharacterPut.json" beforeDir="false" afterPath="$PROJECT_DIR$/PenAndPapARDB/TestJsons/CompleteCharacterPut.json" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/PenAndPapARDB/TestJsons/EmptyCharacterCompletePost.json" beforeDir="false" afterPath="$PROJECT_DIR$/PenAndPapARDB/TestJsons/EmptyCharacterCompletePost.json" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/PenAndPapARDB/TestJsons/MinimalCharacterPut.json" beforeDir="false" afterPath="$PROJECT_DIR$/PenAndPapARDB/TestJsons/MinimalCharacterPut.json" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/PenAndPapARDB/settings.py" beforeDir="false" afterPath="$PROJECT_DIR$/PenAndPapARDB/settings.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -123,6 +130,8 @@
       <workItem from="1741348594924" duration="3054000" />
       <workItem from="1741617552497" duration="634000" />
       <workItem from="1741739395449" duration="28125000" />
+      <workItem from="1741789661337" duration="14230000" />
+      <workItem from="1741829888968" duration="13296000" />
     </task>
     <task id="LOCAL-00001" summary="InnitialCommit">
       <option name="closed" value="true" />
@@ -212,7 +221,15 @@
       <option name="project" value="LOCAL" />
       <updated>1741767809212</updated>
     </task>
-    <option name="localTasksCounter" value="12" />
+    <task id="LOCAL-00012" summary="finished main server sided CRUD Operations">
+      <option name="closed" value="true" />
+      <created>1741789675622</created>
+      <option name="number" value="00012" />
+      <option name="presentableId" value="LOCAL-00012" />
+      <option name="project" value="LOCAL" />
+      <updated>1741789675622</updated>
+    </task>
+    <option name="localTasksCounter" value="13" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
